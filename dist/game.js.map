{
  "version": 3,
  "sources": ["../code/main.js", "../code/big.js", "../code/patrol.js", "../code/assets.js"],
  "sourcesContent": ["import kaboom from \"https://unpkg.com/kaboom@2000.2.9/dist/kaboom.js\"\nimport big from \"./big\"\nimport patrol from \"./patrol\"\nimport loadAssets from \"./assets\"\n\nkaboom()\nloadAssets()\n\n// define some constants\nconst JUMP_FORCE = 1320\nconst MOVE_SPEED = 480\nconst FALL_DEATH = 2400\n\nconst LEVELS = [\n\t[\n\t\t\"                          $\",\n\t\t\"              !            $\",\n\t\t\"                          $\",\n\t\t\"                          $\",\n\t\t\"                          $\",\n\t\t\"           $$         =   $\",\n\t\t\"  %      ====         =   $\",\n\t\t\"     !!!              =   $\",\n\t\t\"                      =    \",\n\t\t\"       ^^      = >    =   @\",\n\t\t\"===========================\",\n\t],\n\t[\n\t\t\"     $    $   ! $    $   !  $\",\n\t\t\"     $   ! $    $    $  !   $\",\n\t\t\"    !     !                  \",\n\t\t\"        !                 !  \",\n\t\t\" =              !        !   \",\n\t\t\" =       !         !         \",\n\t\t\" =                     !!    \",\n\t\t\" =     >     >   >  >!!    ^@\",\n\t\t\"===========================\",\n\t],\n  [\n\t\t\"     $    $    $    $     $\",\n\t\t\"     $    $    $    $     $\",\n\t\t\"                           \",\n\t\t\"                           \",\n\t\t\"                           \",\n\t\t\"                           \",\n\t\t\"   %                       \",\n\t\t\"           > ^^  > @\",\n\t\t\"===========================\",\n\t],\n  [\n\t\t\"     $    $    $    $     $\",\n\t\t\"     $    $    $    $     $\",\n\t\t\"                        @  \",\n\t\t\"                           \",\n\t\t\"                  ==       \",\n\t\t\"   ==     ==               \",\n\t\t\"                           \",\n\t\t\"                           \",\n\t\t\"===========================\",\n\t],\n]\n\n// define what each symbol means in the level graph\nconst levelConf = {\n\t// grid size\n\twidth: 64,\n\theight: 64,\n\t// define each object as a list of components\n\t\"=\": () => [\n\t\tsprite(\"grass\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n\t],\n\t\"$\": () => [\n\t\tsprite(\"coin\"),\n\t\tarea(),\n\t\tpos(0, -9),\n\t\torigin(\"bot\"),\n\t\t\"coin\",\n\t],\n\t\"%\": () => [\n\t\tsprite(\"prize\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n\t\t\"prize\",\n\t],\n\t\"^\": () => [\n\t\tsprite(\"spike\"),\n\t\tarea(),\n\t\tsolid(),\n\t\torigin(\"bot\"),\n\t\t\"danger\",\n\t],\n\t\"#\": () => [\n\t\tsprite(\"apple\"),\n\t\tarea(),\n\t\torigin(\"bot\"),\n\t\tbody(),\n\t\t\"apple\",\n\t],\n\t\"!\": () => [\n\t\tsprite(\"rect\"),\n    area(),\n    solid(),\n\t\torigin(\"bot\"),\n\t\t\"rect\",\n\t],\n\t\">\": () => [\n\t\tsprite(\"ghosty\"),\n\t\tarea(),\n\t\torigin(\"bot\"),\n\t\tbody(),\n\t\tpatrol(),\n\t\t\"enemy\",\n\t],\n\t\"@\": () => [\n\t\tsprite(\"portal\"),\n\t\tarea({ scale: 0.5, }),\n\t\torigin(\"bot\"),\n\t\tpos(0, -12),\n\t\t\"portal\",\n\t],\n}\n\nscene(\"game\", ({ levelId, coins } = { levelId: 0, coins: 0 }) => {\n\n  layers(['bg', 'obj', 'ui'], 'obj')\n\tgravity(3200)\n    const background = add([\n    sprite(\"bg\"),\n    // Make the background centered on the screen\n    pos(width() / 2, height() / 2),\n    origin(\"center\"),\n    // Allow the background to be scaled\n    scale(1.75),\n    // Keep the background position fixed even when the camera moves\n    fixed()\n  ])\n\t// add level to scene\n\tconst level = addLevel(LEVELS[levelId ?? 0], levelConf)\n \n    \n  \n\t// define player object\n\tconst player = add([\n\t\tsprite(\"bean\"),\n\t\tpos(0, 0),\n\t\tarea(),\n\t\tscale(1),\n\t\t// makes it fall to gravity and jumpable\n\t\tbody(),\n\t\t// the custom component we defined above\n\t\tbig(),\n\t\torigin(\"bot\"),\n\t])\n\n\t// action() runs every frame\n\tplayer.onUpdate(() => {\n\t\t// center camera to player\n\t\tcamPos(player.pos)\n\t\t// check fall death\n\t\tif (player.pos.y >= FALL_DEATH) {\n      shake()\n      \n\t\t\tgo(\"lose\")\n\t\t}\n\t})\n\n\t// if player onCollide with any obj with \"danger\" tag, lose\n\tplayer.onCollide(\"danger\", () => {\n    shake()\n    \n\t\tgo(\"lose\")\n\t\tplay(\"hit\")\n\t})\n\n\tplayer.onCollide(\"portal\", () => {\n\t\tplay(\"portal\")\n\t\tif (levelId + 1 < LEVELS.length) {\n\t\t\tgo(\"game\", {\n\t\t\t\tlevelId: levelId + 1,\n\t\t\t\tcoins: coins,\n\t\t\t})\n\t\t} else {\n\t\t\tgo(\"win\")\n\t\t}\n\t})\n\n\tplayer.onGround((l) => {\n\t\tif (l.is(\"enemy\")) {\n\t\t\tplayer.jump(JUMP_FORCE * 1.5)\n\t\t\tdestroy(l)\n\t\t\taddKaboom(player.pos)\n\t\t\tplay(\"powerup\")\n\t\t}\n\t})\n\n\tplayer.onCollide(\"enemy\", (e, col) => {\n\t\t// if it's not from the top, die\n\t\tif (!col.isBottom()) {\n\t\t\tgo(\"lose\")\n\t\t\tplay(\"hit\")\n      \n      shake()\n\t\t}\n\t})\n\n\tlet hasApple = false\n\n\t// grow an apple if player's head bumps into an obj with \"prize\" tag\n\tplayer.onHeadbutt((obj) => {\n\t\tif (obj.is(\"prize\") && !hasApple) {\n\t\t\tconst apple = level.spawn(\"#\", obj.gridPos.sub(0, 1))\n\t\t\tapple.jump()\n\t\t\thasApple = true\n\t\t\tplay(\"blip\")\n\t\t}\n\t})\n\n\t// player grows big onCollide with an \"apple\" obj\n\tplayer.onCollide(\"apple\", (a) => {\n\t\tdestroy(a)\n\t\t// as we defined in the big() component\n\t\tplayer.biggify(3)\n\t\thasApple = false\n\t\tplay(\"powerup\")\n\t})\n  player.onGround((rect) => {\n\t\tif (rect.is(\"rect\")) {\n\t\t\tplayer.jump(JUMP_FORCE * 1.5)\n\t\t\tdestroy(rect)\n\t\t\taddKaboom(player.pos)\n\t\t\tplay(\"explode\")\n\t\t}\n\t})\n\n\tlet coinPitch = 0\n\n\tonUpdate(() => {\n\t\tif (coinPitch > 0) {\n\t\t\tcoinPitch = Math.max(0, coinPitch - dt() * 100)\n\t\t}\n\t})\n\n\tplayer.onCollide(\"coin\", (c) => {\n\t\tdestroy(c)\n\t\tplay(\"coin\", {\n\t\t\tdetune: coinPitch,\n\t\t})\n\t\tcoinPitch += 100\n\t\tcoins += 1\n\t\tcoinsLabel.text = coins\n\t})\n\n\tconst coinsLabel = add([\n\t\ttext(coins),\n\t\tpos(24, 24),\n\t\tfixed(),\n\t])\n\t// jump with space\n\tonKeyPress(\"space\", () => {\n\t\t// these 2 functions are provided by body() component\n\t\tif (player.isGrounded()) {\n\t\t\tplayer.jump(JUMP_FORCE)\n\t\t}\n\t})\n\n\tonKeyDown(\"left\", () => {\n\t\tplayer.move(-MOVE_SPEED, 0)\n\t})\n\n\tonKeyDown(\"right\", () => {\n\t\tplayer.move(MOVE_SPEED, 0)\n\t})\n\n\tonKeyPress(\"down\", () => {\n\t\tplayer.weight = 3\n\t})\n\n\tonKeyRelease(\"down\", () => {\n\t\tplayer.weight = 1\n\t})\n\n\tonKeyPress(\"f\", () => {\n\t\tfullscreen(!fullscreen())\n\t})\n\n})\n\nscene('lose', () => {\n  const background = add([\n    sprite(\"bg\"),\n    // Make the background centered on the screen\n    pos(width() / 2, height() / 2),\n    origin(\"center\"),\n    // Allow the background to be scaled\n    scale(1.75),\n    // Keep the background position fixed even when the camera moves\n    fixed()\n  ])\n  add([text(\"GAME OVER! LMAO\"), origin('center'), pos(width() / 2, height() / 2)])\n  onKeyPress(() => go(\"game\"))\n})\n\nscene(\"win\", () => {\n  const background = add([\n    sprite(\"bg\"),\n    // Make the background centered on the screen\n    pos(width() / 2, height() / 2),\n    origin(\"center\"),\n    // Allow the background to be scaled\n    scale(1.75),\n    // Keep the background position fixed even when the camera moves\n    fixed()\n  ])\n\tadd([text(\"YOU WON!! GG\"), origin('center'), pos(width() / 2, height() / 2)])\n\tonKeyPress(() => go(\"game\"))\n})\n\n\ngo(\"game\")", "// custom component that makes stuff grow big\nexport default function big() {\n\tlet timer = 0;\n\tlet isBig = false;\n\tlet destScale = 1;\n\treturn {\n\t\t// component id / name\n\t\tid: \"big\",\n\t\t// it requires the scale component\n\t\trequire: [ \"scale\" ],\n\t\t// this runs every frame\n\t\tupdate() {\n\t\t\tif (isBig) {\n\t\t\t\ttimer -= dt();\n\t\t\t\tif (timer <= 0) {\n\t\t\t\t\tthis.smallify();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scale = this.scale.lerp(vec2(destScale), dt() * 6);\n\t\t},\n\t\t// custom methods\n\t\tisBig() {\n\t\t\treturn isBig;\n\t\t},\n\t\tsmallify() {\n\t\t\tdestScale = 1;\n\t\t\ttimer = 0;\n\t\t\tisBig = false;\n\t\t},\n\t\tbiggify(time) {\n\t\t\tdestScale = 2;\n\t\t\ttimer = time;\n\t\t\tisBig = true;\n\t\t},\n\t};\n}", "// custom component controlling enemy patrol movement\nexport default function patrol(speed = 60, dir = 1) {\n\treturn {\n\t\tid: \"patrol\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tadd() {\n\t\t\tthis.on(\"collide\", (obj, col) => {\n\t\t\t\tif (col.isLeft() || col.isRight()) {\n\t\t\t\t\tdir = -dir\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tupdate() {\n\t\t\tthis.move(speed * dir, 0)\n\t\t},\n\t}\n}", "export default function loadAssets() {\n\tloadSprite(\"bean\", \"sprites/bean.png\");\n\tloadSprite(\"ghosty\", \"sprites/ghosty.png\");\n\tloadSprite(\"spike\", \"sprites/spike.png\");\n\tloadSprite(\"grass\", \"sprites/grass.png\");\n\tloadSprite(\"prize\", \"sprites/jumpy.png\");\n\tloadSprite(\"apple\", \"sprites/apple.png\");\n\tloadSprite(\"portal\", \"sprites/portal.png\");\n\tloadSprite(\"coin\", \"sprites/coin.png\");\n\tloadSound(\"coin\", \"sounds/score.mp3\");\n\tloadSound(\"powerup\", \"sounds/powerup.mp3\");\n\tloadSound(\"blip\", \"sounds/blip.mp3\");\n\tloadSound(\"hit\", \"sounds/hit.mp3\");\n\tloadSound(\"portal\", \"sounds/portal.mp3\");\n  loadSprite(\"rect\", \"sprites/rect.png\");\n  loadSound(\"explode\", \"sounds/explode.mp3\");\n  loadSprite(\"bg\", \"sprites/background.jpg\");\n}"],
  "mappings": "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",
  "names": []
}
